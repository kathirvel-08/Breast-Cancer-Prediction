# **Breast Cancer Prediction using Random Forest Classifier**

This project implements a **Breast Cancer Prediction model** using a **Random Forest Classifier** to predict whether a tumor is malignant or benign based on various features. The model is trained and evaluated on the **Breast Cancer dataset** from the UCI Machine Learning Repository.

## **Project Description**

This project aims to build a machine learning model that can predict breast cancer outcomes (malignant or benign) using data collected from breast cancer biopsies. The dataset consists of features like radius, texture, smoothness, and others, derived from digitized images of a breast mass.

The **Random Forest Classifier** is used due to its robustness and high performance in classification tasks. This model helps in making predictions on unseen data, providing a powerful tool for early detection of breast cancer.

## **Features**
- **Model Type**: Random Forest Classifier
- **Dataset**: Breast Cancer dataset (available from `sklearn.datasets`)
- **Evaluation Metrics**:
  - **Accuracy**: Measures the overall correctness of the model.
  - **Precision**: The proportion of positive predictions that are actually correct.
  - **Recall**: The proportion of actual positives correctly identified.
  - **F1-Score**: Harmonic mean of precision and recall, providing a balance between the two.

## **Requirements**

- Python 3.x
- Libraries:
  - `sklearn`
  - `numpy`
  - `matplotlib`
  - `seaborn`
  - `pandas`

You can install the necessary libraries using the following command:

```bash
pip install -r requirements.txt
```

**requirements.txt** file content:

```txt
scikit-learn==1.1.1
numpy==1.21.2
matplotlib==3.4.3
seaborn==0.11.2
pandas==1.3.3
```

## **Setup and Usage**

### 1. **Clone the repository**

```bash
git clone https://github.com/yourusername/breast-cancer-prediction.git
cd breast-cancer-prediction
```

### 2. **Run the Model**
Run the `breast_cancer_prediction.py` script to train and evaluate the model:

```bash
python breast_cancer_prediction.py
```

### 3. **Training Process**
- The script loads the **Breast Cancer dataset**.
- The dataset is split into **training** and **test** sets (80% for training, 20% for testing).
- A **Random Forest Classifier** is trained using the training set.
- Predictions are made on the test set and performance metrics (accuracy, precision, recall, F1-score) are displayed.

### 4. **Visualization**
- **Confusion Matrix**: Visualized using `seaborn` heatmaps to understand true vs. predicted classifications.
- **Feature Importance**: Displays which features were most important for the model's decision-making.

### 5. **Results Example**

**Accuracy**: 97.66%

**Classification Report**:
```plaintext
               precision    recall  f1-score   support

           0       0.98      0.98      0.98        40
           1       0.97      0.97      0.97        69

    accuracy                           0.98       109
   macro avg       0.97      0.97      0.97       109
weighted avg       0.97      0.98      0.97       109
```

**Confusion Matrix**:

|                | Predicted: Benign (0) | Predicted: Malignant (1) |
|----------------|-----------------------|--------------------------|
| **True: Benign (0)**  | 40                    | 0                        |
| **True: Malignant (1)** | 2                     | 67                       |

---

## **License**

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

---

### **Contact**

For any questions or issues, feel free to open an issue or contact me directly at **[kathirvel15082k@gmail.com](mailto:kathirvel15082k@gmail.com)**.

---
